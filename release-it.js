module.exports = {
	hooks: {},
	plugins: {
		"@release-it/conventional-changelog": {
			preset: {
				name: "conventionalcommits",
				types: [
					{ type: "feat", section: "Features" },
					{ type: "fix", section: "Bug Fixes" },
					{ type: "perf", section: "Performance Improvements" },
					{ type: "revert", section: "Reverts" },
					{ type: "docs", section: "Documentation" },
					{ type: "style", section: "Styles" },
					{ type: "refactor", section: "Code Refactoring" },
					{ type: "test", section: "Tests" },
					{ type: "build", section: "Build System" },
					{ type: "ci", section: "Continuous Integration" },
					{ type: "chore", section: "Chores" },
					{ type: "other", hidden: true },
				],
			},
			infile: "CHANGELOG.md"
		}
	},
	git: {
		changelog: 'git log --pretty=format:"* %s (%h)" ${from}...${to}',
		requireCleanWorkingDir: false,
		requireBranch: false,
		requireUpstream: true,
		requireCommits: false,
		requireCommitsFail: true,
		commitsPath: "",
		addUntrackedFiles: false,
		commit: true,
		commitMessage: "Release ${version}",
		commitArgs: [],
		tag: true,
		tagExclude: null,
		tagName: null,
		tagMatch: null,
		getLatestTagFromAllRefs: false,
		tagAnnotation: "Release ${version}",
		tagArgs: [],
		push: true,
		pushArgs: ["--follow-tags"],
		pushRepo: "",
	},
	npm: {
		publish: false,
		publishPath: ".",
		publishArgs: [],
		tag: null,
		otp: null,
		ignoreVersion: false,
		allowSameVersion: false,
		versionArgs: [],
		skipChecks: true,
		timeout: 10,
	},
	github: {
		release: false,
		releaseName: "Release ${version}",
		releaseNotes: null,
		autoGenerate: false,
		preRelease: false,
		draft: false,
		tokenRef: "GITHUB_TOKEN",
		assets: null,
		host: null,
		timeout: 0,
		proxy: null,
		skipChecks: false,
		web: false,
		comments: {
			submit: false,
			issue:
				":rocket: _This issue has been resolved in v${version}. See [${releaseName}](${releaseUrl}) for release notes._",
			pr: ":rocket: _This pull request is included in v${version}. See [${releaseName}](${releaseUrl}) for release notes._",
		},
	},
	gitlab: {
		release: false,
		releaseName: "Release ${version}",
		releaseNotes: null,
		milestones: [],
		tokenRef: "GITLAB_TOKEN",
		tokenHeader: "Private-Token",
		certificateAuthorityFile: null,
		assets: null,
		origin: null,
		skipChecks: false,
	},
};
